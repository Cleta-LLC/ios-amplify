enum PostStatus {
  DELETED
  DRAFT
  PUBLISHED
  SELLING
  SOLD
}

type Post @model {
  id: ID!
  postOwnerId: String!
  postTitle: String!
  postBody: String!
  comments: [Comment] @connection(name: "PostComments")
  likes: [Like] @connection(name: "PostLikes")
  nfts: [SimpleNFT] @connection(name: "PostNfts")
}

type SimpleNFT @model {
  id: ID!
  NftOwnerId: String!
  title: String!
  description: String
  price: Float
  image: String
  # This might change annd be it's own model for the moment accept tags: my,random,tag
  # Need to check elasticsearch on best way to manage tags
  tags: String
  rating: [Rating] @connection(name: "NftRating")
  comments: [Comment] @connection(name: "NftComments")
  likes: [Like] @connection(name: "NftLikes")
  post: Post @connection(name: "PostNfts")
  file: S3Object
}

type Comment @model {
  id: ID!
  commentOwnerId: String!
  content: String!
  post: Post @connection(name: "PostComments")
  nft: SimpleNFT @connection(name: "NftComments")
}

type Like @model {
  id: ID!
  likeOwnerId: String!
  numberLikes: Int!
  post: Post @connection(name: "PostLikes")
  nft: SimpleNFT @connection(name: "NftLikes")
}

type Rating @model {
  id: ID!
  ratingOwnerId: String!
  numberRating: Int!
  nft: SimpleNFT @connection(name: "NftRating")
}

type S3Object {
  bucket: String!
  key: String!
  region: String!
}

input createSimpleNFTInput {
  id: ID
  NftOwnerId: String!
  title: String!
  description: String
  price: Float
  image: String
  tags: String
  # file: S3ObjectInput  # Autogenerated
}
